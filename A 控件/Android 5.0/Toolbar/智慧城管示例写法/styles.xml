<resources>

    <!-- Base application theme. -->
    <!--<style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">-->
        <!--&lt;!&ndash; Customize your theme here. &ndash;&gt;-->
        <!--<item name="colorPrimary">@color/colorPrimary</item>-->
        <!--<item name="colorPrimaryDark">@color/colorPrimaryDark</item>-->
        <!--<item name="colorAccent">@color/colorAccent</item>-->
    <!--</style>-->

    <!--没有标题栏的页面,有通知栏-->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/deep_green</item><!--深绿色:#079481-->
    </style>

    <!--全屏界面,连通知栏都没有-->
    <style name="FullScreen" parent="AppTheme">
        <item name="android:windowFullscreen">true</item>
    </style>


    <!--如果EditText中输入长度没超过,下方counter的颜色-->
    <style name="counterTextColor"
           parent="Base.TextAppearance.AppCompat.Widget.PopupMenu.Small">
        <item name="android:textColor">@color/deep_green</item><!--#079481-->
        <item name="android:textAllCaps">false</item>
        <item name="android:textSize">12dp</item>
    </style>

    <!--如果EditText中输入长度超过了,hint和下划线的提示-->
    <style name="counterOverflowTextColor"
           parent="Base.TextAppearance.AppCompat.Widget.PopupMenu.Small">
        <item name="android:textColor">@color/red</item><!--#ff0000-->
        <item name="android:textAllCaps">false</item>
        <item name="android:textSize">16dp</item>
    </style>

    <!--获取焦点后,上面Label的颜色,大小-->
    <style name="HintAppearance" parent="TextAppearance.AppCompat">
        <item name="android:textSize">16sp</item>
        <item name="android:textColor">@color/deep_green</item>
    </style>

    <!--在toolBar中设置app:theme="@style/ToolBarStyle"-->
    <style name="ToolBarTheme" parent="AppTheme">
        <!--<item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>-->
        <!--设置溢出菜单项图标,也可以在代码中设置-->
        <!--<item name="actionOverflowButtonStyle">@style/OverFlowIcon</item>-->
        <!--只要ToolBar没有自定义颜色,就是这个颜色(包括popup里的文字颜色)-->
        <item name="android:textColorPrimary">@color/white</item>
        <!-- 设置 显示在toobar上菜单文字的颜色,网上另外一种方法,没试过 -->
        <!--<item name="actionMenuTextColor">@android:color/white</item>-->
        <!--只要ToolBar没有自定义字体大小,就是这个大小(包括popup例的文字大小)-->
        <!--<item name="android:textSize">25sp</item>-->
        <!--指定的返回键的颜色,activity中:getSupportActionBar().setDisplayHomeAsUpEnabled(true)设置返回键-->
        <item name="colorControlNormal">@color/white</item>
    </style>

    <!--一般用于详情页的标题-->
    <style name="title_style">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:gravity">center</item>
        <item name="android:textColor">@color/black</item>
        <item name="android:textSize">16sp</item>
    </style>

    <!--一般用于详情页的内容-->
    <style name="content_style_gray666">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textColor">@color/gray_666</item>
        <item name="android:textSize">16sp</item>
    </style>

    <!--AndroidTreeView的style-->
    <style name="TreeNodeStyleCustom">
        <item name="android:paddingLeft">20dp</item>
        <item name="android:showDividers">middle</item><!--child之间分割线-->
        <item name="android:divider">@android:drawable/divider_horizontal_bright</item>
    </style>
</resources>
