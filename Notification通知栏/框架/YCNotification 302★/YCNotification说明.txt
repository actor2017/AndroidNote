https://github.com/yangchong211/YCNotification
https://blog.csdn.net/weixin_34400525/article/details/93009422
通知栏封装库，链式编程调用，解决了8.0以上通知栏不显示问题，兼容老版本。

compile 'cn.yc:notificationLib:1.0.2'


2.1 最简单调用方式
NotificationUtils notificationUtils = new NotificationUtils(this);
notificationUtils.sendNotification(1,"这个是标题","这个是内容",R.mipmap.ic_launcher);

//在NotificationUtils构造方法中
public NotificationUtils(Context base) {
    super(base);
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
        //android 8.0以上需要特殊处理，也就是targetSDKVersion为26以上
        createNotificationChannel();
    }
}


2.2 完整使用方法介绍
long[] vibrate = new long[]{0, 500, 1000, 1500};
//处理点击Notification的逻辑
//创建intent
Intent resultIntent = new Intent(this, TestActivity.class);
resultIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);           //添加为栈顶Activity
resultIntent.putExtra("what",3);
PendingIntent resultPendingIntent = PendingIntent.getActivity(this,3,resultIntent,PendingIntent.FLAG_UPDATE_CURRENT);
//发送pendingIntent

NotificationUtils notificationUtils = new NotificationUtils(this);
notificationUtils
        //让通知左右滑的时候是否可以取消通知
        .setOngoing(true)
        //设置内容点击处理intent
        .setContentIntent(resultPendingIntent)
        //设置状态栏的标题
        .setTicker("来通知消息啦")
        //设置自定义view通知栏布局
        .setContent(getRemoteViews())
        //设置sound
        .setSound(android.provider.Settings.System.DEFAULT_NOTIFICATION_URI)
        //设置优先级
        .setPriority(Notification.PRIORITY_DEFAULT)
        //自定义震动效果
        .setVibrate(vibrate)
        //必须设置的属性，发送通知
        .sendNotification(3,"这个是标题3", "这个是内容3", R.mipmap.ic_launcher);


...
